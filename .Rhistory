library(Ibex)
data("ibex_example")
ibex_example <- runIbex(ibex_example,
chains = "heavy",
method = "encoder",
encoder.model = "VAE",
encoder.input = "AF",
reduction.name = "Heavy_VAE_AF")
ibex_example <- runIbex(ibex_example,
chains = "Heavy",
method = "encoder",
encoder.model = "VAE",
encoder.input = "AF",
reduction.name = "Heavy_VAE_AF")
library(Ibex)
data("ibex_example")
set.seed(42)
ibex_example <- runIbex(ibex_example,
chains = "Heavy",
method = "encoder",
encoder.model = "VAE",
encoder.input = "AF",
reduction.name = "Heavy_VAE_AF")
ibex_example <- runIbex(trex_example,
chains = "Light",
method = "encoder",
encoder.model = "AE",
encoder.input = "KF",
reduction.name = "Light_AE_KF")
ibex_example <- runIbex(ibex_example,
chains = "Light",
method = "encoder",
encoder.model = "AE",
encoder.input = "KF",
reduction.name = "Light_AE_KF")
ibex_example <- runIbex(ibex_example,
chains = "Heavy",
method = "encoder",
encoder.model = "VAE",
encoder.input = "OHE",
reduction.name = "Heavy_VAE_OHE")
saveRDS(ibex_example@reductions$Heavy_VAE_AF@cell.embeddings, "~/runIbex_Heavy_VAE_AF_reduction.rds")
saveRDS(ibex_example@reductions$Light_AE_KF@cell.embeddings, "~/runIbex_Light_AE_KF_reduction.rds")
saveRDS(ibex_example@reductions$Heavy_VAE_OHE@cell.embeddings, "~/runIbex_Heavy_VAE_OHE_reduction.rds")
setwd("~/Documents/GitHub/Ibex")
spelling::spell_check_package()
dim(ibex_example)
spelling::spell_check_package()
devtools::document()
spelling::spell_check_package()
devtools::document()
spelling::spell_check_package()
spelling::update_wordlist()
testthat::test_local()
testthat::test_local()
devtools::check()
setwd("~/Documents/GitHub/escape")
devtools::check()
suppressPackageStartupMessages(library(escape))
suppressPackageStartupMessages(library(SingleCellExperiment))
suppressPackageStartupMessages(library(Seurat))
suppressPackageStartupMessages(library(SeuratObject))
pbmc_small <- get("pbmc_small")
pbmc_small <- DietSeurat(suppressMessages(UpdateSeuratObject(pbmc_small)))
sce <- as.SingleCellExperiment(pbmc_small, assay = "RNA")
GS.hallmark <- getGeneSets(library = "H")
data("escape.gene.sets", package="escape")
gene.sets <- escape.gene.sets
gene.sets <- list(Tcell_signature = c("CD2","CD3E","CD3D"),
Myeloid_signature = c("SPI1","FCER1G","CSF1R"))
devtools::check()
ES.seurat <- enrichIt(obj = pbmc_small,
gene.sets = GS.hallmark,
groups = 1000,
cores = 2,
min.size = 5)
ES.sce <- enrichIt(obj = sce,
gene.sets = GS.hallmark,
method = "UCell",
groups = 1000,
cores = 2,
min.size = 5)
usethis::use_bioc_badge()
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ref = NULL,
ignore = TRUE,
open = FALSE
)
library(usethis)
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ref = NULL,
ignore = TRUE,
open = FALSE
)
